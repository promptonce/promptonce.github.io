<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PromptOnce</title>
  
  
  <link href="https://promptonce.github.io/atom.xml" rel="self"/>
  
  <link href="https://promptonce.github.io/"/>
  <updated>2025-08-06T12:50:31.614Z</updated>
  <id>https://promptonce.github.io/</id>
  
  <author>
    <name>penggan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>编程开发中导入库和封装总结</title>
    <link href="https://promptonce.github.io/2025/08/06/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91%E4%B8%AD%E5%AF%BC%E5%85%A5%E5%BA%93%E5%92%8C%E5%B0%81%E8%A3%85%E6%80%BB%E7%BB%93/"/>
    <id>https://promptonce.github.io/2025/08/06/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91%E4%B8%AD%E5%AF%BC%E5%85%A5%E5%BA%93%E5%92%8C%E5%B0%81%E8%A3%85%E6%80%BB%E7%BB%93/</id>
    <published>2025-08-06T12:45:30.000Z</published>
    <updated>2025-08-06T12:50:31.614Z</updated>
    
    <content type="html"><![CDATA[<pre><code>之所以能写出看起来优雅的代码是应为库代码在“负重前行”，但想要使用库的能力，需要通过导入的方式建立这种连接。但由于业务的多样性库函数不能端到端地解决问题，需要人类程序员介入来完成最后一公里的开发，这里仍然有一些难点，但更偏上层。</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;之所以能写出看起来优雅的代码是应为库代码在“负重前行”，但想要使用库的能力，需要通过导入的方式建立这种连接。但由于业务的多样性库函数不能端到端地解决问题，需要人类程序员介入来完成最后一公里的开发，这里仍然有一些难点，但更偏上层。
&lt;/code&gt;&lt;/pre&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>以具象离散和抽象连续思维来理解程序事件监听</title>
    <link href="https://promptonce.github.io/2025/07/27/%E4%BB%A5%E5%85%B7%E8%B1%A1%E7%A6%BB%E6%95%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E8%BF%9E%E7%BB%AD%E6%80%9D%E7%BB%B4%E6%9D%A5%E7%90%86%E8%A7%A3%E7%A8%8B%E5%BA%8F%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC/"/>
    <id>https://promptonce.github.io/2025/07/27/%E4%BB%A5%E5%85%B7%E8%B1%A1%E7%A6%BB%E6%95%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E8%BF%9E%E7%BB%AD%E6%80%9D%E7%BB%B4%E6%9D%A5%E7%90%86%E8%A7%A3%E7%A8%8B%E5%BA%8F%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC/</id>
    <published>2025-07-27T07:34:20.000Z</published>
    <updated>2025-07-27T07:44:46.589Z</updated>
    
    <content type="html"><![CDATA[<p>  计算机中的各种资源比如视频、图片、音频，给人的感觉是连续的，但也只是一种虚假的感觉，这是一种优秀的计算机设计抽象实践，这种离散设计与人的信号接收延迟原理相结合。程序的事件监听也是如此，可以知道一定是利用了循环，不断的去检查事件是否触发，这个检查时间可能非常短。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  计算机中的各种资源比如视频、图片、音频，给人的感觉是连续的，但也只是一种虚假的感觉，这是一种优秀的计算机设计抽象实践，这种离散设计与人的信号接收延迟原理相结合。程序的事件监听也是如此，可以知道一定是利用了循环，不断的去检查事件是否触发，这个检查时间可能非常短。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>一个中等的工科生应有的能力</title>
    <link href="https://promptonce.github.io/2025/07/16/%E4%B8%80%E4%B8%AA%E4%B8%AD%E7%AD%89%E7%9A%84%E5%B7%A5%E7%A7%91%E7%94%9F%E5%BA%94%E6%9C%89%E7%9A%84%E8%83%BD%E5%8A%9B/"/>
    <id>https://promptonce.github.io/2025/07/16/%E4%B8%80%E4%B8%AA%E4%B8%AD%E7%AD%89%E7%9A%84%E5%B7%A5%E7%A7%91%E7%94%9F%E5%BA%94%E6%9C%89%E7%9A%84%E8%83%BD%E5%8A%9B/</id>
    <published>2025-07-16T15:31:03.000Z</published>
    <updated>2025-07-16T15:32:34.097Z</updated>
    
    <content type="html"><![CDATA[<pre><code>记忆、推演、表达、感知、数理、操作、狂热、创造</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;pre&gt;&lt;code&gt;记忆、推演、表达、感知、数理、操作、狂热、创造
&lt;/code&gt;&lt;/pre&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>从LLM角度看待代码语法层面的一些理论</title>
    <link href="https://promptonce.github.io/2025/07/09/%E4%BB%8ELLM%E8%A7%92%E5%BA%A6%E7%9C%8B%E5%BE%85%E4%BB%A3%E7%A0%81%E8%AF%AD%E6%B3%95%E5%B1%82%E9%9D%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%AE%BA/"/>
    <id>https://promptonce.github.io/2025/07/09/%E4%BB%8ELLM%E8%A7%92%E5%BA%A6%E7%9C%8B%E5%BE%85%E4%BB%A3%E7%A0%81%E8%AF%AD%E6%B3%95%E5%B1%82%E9%9D%A2%E7%9A%84%E4%B8%80%E4%BA%9B%E7%90%86%E8%AE%BA/</id>
    <published>2025-07-09T12:40:09.000Z</published>
    <updated>2025-07-09T12:43:34.527Z</updated>
    
    <content type="html"><![CDATA[<p>  对于LLM来说，有一个理论是压缩信息需要的就是知识，在代码语法中，有函数，类这些理论的出现，正是为了压缩代码量，这正好说明函数，class这些就是知识。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  对于LLM来说，有一个理论是压缩信息需要的就是知识，在代码语法中，有函数，类这些理论的出现，正是为了压缩代码量，这正好说明函数，class这些就是知识。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>定义变量和程序实现的关系</title>
    <link href="https://promptonce.github.io/2025/06/18/%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E5%92%8C%E7%A8%8B%E5%BA%8F%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
    <id>https://promptonce.github.io/2025/06/18/%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F%E5%92%8C%E7%A8%8B%E5%BA%8F%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%85%B3%E7%B3%BB/</id>
    <published>2025-06-18T12:46:35.000Z</published>
    <updated>2025-06-18T12:50:37.118Z</updated>
    
    <content type="html"><![CDATA[<p>  对于算法和应用结合的程序，变量定义说明算法逻辑关系捋清楚了，后面就是为算法服务的工具调用问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  对于算法和应用结合的程序，变量定义说明算法逻辑关系捋清楚了，后面就是为算法服务的工具调用问题。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>软件开发的深水区浅水区理论</title>
    <link href="https://promptonce.github.io/2025/06/18/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%9A%84%E6%B7%B1%E6%B0%B4%E5%8C%BA%E6%B5%85%E6%B0%B4%E5%8C%BA%E7%90%86%E8%AE%BA/"/>
    <id>https://promptonce.github.io/2025/06/18/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%9A%84%E6%B7%B1%E6%B0%B4%E5%8C%BA%E6%B5%85%E6%B0%B4%E5%8C%BA%E7%90%86%E8%AE%BA/</id>
    <published>2025-06-18T03:42:26.000Z</published>
    <updated>2025-06-18T05:29:15.230Z</updated>
    
    <content type="html"><![CDATA[<p>  在浅水区，科学家最早关注的区域，这里理论相对成熟，做开发会非常趁手，在这里应该更多关注虚心学习的态度。在深水区，努力也很重要，但天赋灵感的作用也会凸现。不要轻易将深水区的理论带到浅水区，分清楚自娱自乐和技术创造社会价值的区别。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  在浅水区，科学家最早关注的区域，这里理论相对成熟，做开发会非常趁手，在这里应该更多关注虚心学习的态度。在深水区，努力也很重要，但天赋灵感的作用也会凸现。不要轻易将深水区的理论带到浅水区，分清楚自娱自乐和技术创造社会价值的区别。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>程序员AI辅助编程中Prompt的成本核算</title>
    <link href="https://promptonce.github.io/2025/06/17/%E7%A8%8B%E5%BA%8F%E5%91%98AI%E8%BE%85%E5%8A%A9%E7%BC%96%E7%A8%8B%E4%B8%ADPrompt%E7%9A%84%E6%88%90%E6%9C%AC%E6%A0%B8%E7%AE%97/"/>
    <id>https://promptonce.github.io/2025/06/17/%E7%A8%8B%E5%BA%8F%E5%91%98AI%E8%BE%85%E5%8A%A9%E7%BC%96%E7%A8%8B%E4%B8%ADPrompt%E7%9A%84%E6%88%90%E6%9C%AC%E6%A0%B8%E7%AE%97/</id>
    <published>2025-06-17T15:04:58.000Z</published>
    <updated>2025-06-17T15:26:07.138Z</updated>
    
    <content type="html"><![CDATA[<p>  LLM在处理能力范围内的需求时代码键入速度远超人类，即便是地表最优秀的程序员，这好比计算机在计算速度上远超过任何一个数学家一样。在这个前提下将软件开发需求描述清楚是非常有性价比的，当少数文字对应大段业务代码时提效非常明显，当设计架构方面的代码编写上依赖于Agent的能力，在Agent能力范围以内遵循少数文字对应大段业务代码操作时提效非常明显。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  LLM在处理能力范围内的需求时代码键入速度远超人类，即便是地表最优秀的程序员，这好比计算机在计算速度上远超过任何一个数学家一样。在这个前提下将软件开发需求描述清楚是非常有性价比的，当少数文字对应大段业务代码时提效非常明显，当设计架构方面的代码编写上依赖于Agent的能力</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>cmd和powershell的区别</title>
    <link href="https://promptonce.github.io/2025/06/15/cmd%E5%92%8Cpowershell%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>https://promptonce.github.io/2025/06/15/cmd%E5%92%8Cpowershell%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2025-06-15T13:33:33.000Z</published>
    <updated>2025-06-15T13:34:14.398Z</updated>
    
    <content type="html"><![CDATA[<p>  powershell在cmd上支持了更多的语法支持。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  powershell在cmd上支持了更多的语法支持。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>显示器亮度对比度护眼调节设置</title>
    <link href="https://promptonce.github.io/2025/06/09/%E6%98%BE%E7%A4%BA%E5%99%A8%E4%BA%AE%E5%BA%A6%E5%AF%B9%E6%AF%94%E5%BA%A6%E6%8A%A4%E7%9C%BC%E8%B0%83%E8%8A%82%E8%AE%BE%E7%BD%AE/"/>
    <id>https://promptonce.github.io/2025/06/09/%E6%98%BE%E7%A4%BA%E5%99%A8%E4%BA%AE%E5%BA%A6%E5%AF%B9%E6%AF%94%E5%BA%A6%E6%8A%A4%E7%9C%BC%E8%B0%83%E8%8A%82%E8%AE%BE%E7%BD%AE/</id>
    <published>2025-06-09T15:25:05.000Z</published>
    <updated>2025-06-17T13:43:50.470Z</updated>
    
    <content type="html"><![CDATA[<p>  调成眼睛舒服的效果。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  调成眼睛舒服的效果。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>软件开发需求实现过程中的成本核算问题</title>
    <link href="https://promptonce.github.io/2025/06/04/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E6%88%90%E6%9C%AC%E6%A0%B8%E7%AE%97%E9%97%AE%E9%A2%98/"/>
    <id>https://promptonce.github.io/2025/06/04/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E6%88%90%E6%9C%AC%E6%A0%B8%E7%AE%97%E9%97%AE%E9%A2%98/</id>
    <published>2025-06-04T15:46:32.000Z</published>
    <updated>2025-06-04T15:50:01.521Z</updated>
    
    <content type="html"><![CDATA[<p>  不是仅通过大脑中的仿真来核算，需要结合真实环境来核算，比如程序运行和调试必要的时间，这些时间和同步代码执行的时间可能差了几个数量级。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  不是仅通过大脑中的仿真来核算，需要结合真实环境来核算，比如程序运行和调试必要的时间，这些时间和同步代码执行的时间可能差了几个数量级。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>如何减少软件开发编程语言切换带来的不适感</title>
    <link href="https://promptonce.github.io/2025/06/04/%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%88%87%E6%8D%A2%E5%B8%A6%E6%9D%A5%E7%9A%84%E4%B8%8D%E9%80%82%E6%84%9F/"/>
    <id>https://promptonce.github.io/2025/06/04/%E5%A6%82%E4%BD%95%E5%87%8F%E5%B0%91%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%88%87%E6%8D%A2%E5%B8%A6%E6%9D%A5%E7%9A%84%E4%B8%8D%E9%80%82%E6%84%9F/</id>
    <published>2025-06-04T15:37:13.000Z</published>
    <updated>2025-06-04T15:41:20.160Z</updated>
    
    <content type="html"><![CDATA[<p>  不同编程语言本质上是不同编程语言作者对物理规律，更具体来说是计算机技术的设计方式不同，包含了原作者对技术转换能源的理解，但这些编程语言设计都有一些通用的理念，这个是在切换编程语言后可以利用这些通用的东西来减少语言切换的阻尼感。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  不同编程语言本质上是不同编程语言作者对物理规律，更具体来说是计算机技术的设计方式不同，包含了原作者对技术转换能源的理解，但这些编程语言设计都有一些通用的理念，这个是在切换编程语言后可以利用这些通用的东西来减少语言切换的阻尼感。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>软件开发中如何开发新需求</title>
    <link href="https://promptonce.github.io/2025/06/04/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%AD%E5%A6%82%E4%BD%95%E5%BC%80%E5%8F%91%E6%96%B0%E9%9C%80%E6%B1%82/"/>
    <id>https://promptonce.github.io/2025/06/04/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E4%B8%AD%E5%A6%82%E4%BD%95%E5%BC%80%E5%8F%91%E6%96%B0%E9%9C%80%E6%B1%82/</id>
    <published>2025-06-04T15:29:56.000Z</published>
    <updated>2025-06-04T15:32:18.186Z</updated>
    
    <content type="html"><![CDATA[<p>  保证各个代码系统处于开发者模式启动中，对于前后端分离的系统，前端开发环境需要启动起来，后端服务器要远程登录上，因为随时可能添加测试代码测试需求实现过程中的问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  保证各个代码系统处于开发者模式启动中，对于前后端分离的系统，前端开发环境需要启动起来，后端服务器要远程登录上，因为随时可能添加测试代码测试需求实现过程中的问题。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JavaScript Promise产生原因</title>
    <link href="https://promptonce.github.io/2025/06/03/JavaScript-Promise%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0/"/>
    <id>https://promptonce.github.io/2025/06/03/JavaScript-Promise%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0/</id>
    <published>2025-06-03T02:38:35.000Z</published>
    <updated>2025-06-03T02:44:39.408Z</updated>
    
    <content type="html"><![CDATA[<p>  JavaScript的并发是基于单线程的，单线程实现并发并不一定是不好的，单线程中资源共享较好，从源头上避免了多线程之间的一些问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  JavaScript的并发是基于单线程的，单线程实现并发并不一定是不好的，单线程中资源共享较好，从源头上避免了多线程之间的一些问题。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>异步编程的适用场景</title>
    <link href="https://promptonce.github.io/2025/06/03/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B%E7%9A%84%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    <id>https://promptonce.github.io/2025/06/03/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B%E7%9A%84%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF/</id>
    <published>2025-06-03T01:13:39.000Z</published>
    <updated>2025-06-03T02:19:36.064Z</updated>
    
    <content type="html"><![CDATA[<p>  同步编程是一种不考虑特殊情况的开发模式，其假设是所有任务执行的速度非常快，但实际中I&#x2F;O密集型任务和网络请求任务耗时较长，异步编程就像一个补丁用于解决这个问题，为什么不能统一呢？这和想统一宇宙中的几大力一样，经典力学在量子维度失效，这样就要去否定经典力学的价值吗？经典力学同样能解决一些社会中的问题，这个世界上没有绝对的完美，只有相对的完美，如果你觉得有绝对的完美，那么想一想蒙蔽你的到底是啥。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  同步编程是一种不考虑特殊情况的开发模式，其假设是所有任务执行的速度非常快，但实际中I&amp;#x2F;O密集型任务和网络请求任务耗时较长，异步编程就像一个补丁用于解决这个问题，为什么不能统一呢？这和想统一宇宙中的几大力一样，经典力学在量子维度失效，这样就要去否定经典力学的价值</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>并发、并行、异步、同步</title>
    <link href="https://promptonce.github.io/2025/06/02/%E5%B9%B6%E5%8F%91%E3%80%81%E5%B9%B6%E8%A1%8C%E3%80%81%E5%BC%82%E6%AD%A5%E3%80%81%E5%90%8C%E6%AD%A5/"/>
    <id>https://promptonce.github.io/2025/06/02/%E5%B9%B6%E5%8F%91%E3%80%81%E5%B9%B6%E8%A1%8C%E3%80%81%E5%BC%82%E6%AD%A5%E3%80%81%E5%90%8C%E6%AD%A5/</id>
    <published>2025-06-02T15:29:49.000Z</published>
    <updated>2025-06-03T02:06:37.635Z</updated>
    
    <content type="html"><![CDATA[<p>  一个人在烧水、洗衣服、玩手机时可以选择做完一件事情后再做另一件事情，即便这样是低效的但也可以抽象为一种cpu的工作方式，站在更高效转换能源的角度，更合理的抽象方式是让CPU在等待一个任务执行完成的间隙切换到其他任务，对于I&#x2F;O密集型和网络请求这类任务来说，优化CPU的工作模式相比于提高这些任务的执行速度更有性价比，感觉计算机技术有点像在物理环境受限的情况下用智慧去走捷径的妥协艺术。<br>  并发是指单核CPU轮流执行线程。并行指多核CPU不同核处理不同线程，做到真正的并行。同步是一种开发模式，后面的代码必须等前面的代码执行完成后才能执行。同步也是一种开发模式，后面的代码可以不用等前面的代码执行完成才开始执行，当数据返回时，通过回调函数的方式再执行前面的代码。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  一个人在烧水、洗衣服、玩手机时可以选择做完一件事情后再做另一件事情，即便这样是低效的但也可以抽象为一种cpu的工作方式，站在更高效转换能源的角度，更合理的抽象方式是让CPU在等待一个任务执行完成的间隙切换到其他任务，对于I&amp;#x2F;O密集型和网络请求这类任务来说，优化</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>进程与线程</title>
    <link href="https://promptonce.github.io/2025/06/02/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/"/>
    <id>https://promptonce.github.io/2025/06/02/%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B/</id>
    <published>2025-06-02T14:42:51.000Z</published>
    <updated>2025-06-02T14:50:22.824Z</updated>
    
    <content type="html"><![CDATA[<p>  程序代码存放在硬盘中，这和菜谱存放在柜子中道理相同，程序代码需要执行时，将代码读入到内存中，可以将一段代码读入多份到内存中，也就创建了多个进程，一个进程中为啥还要有“子进程”线程呢？比如文档编辑软件中，处理键盘回车换行的程序和页面渲染程序、保存文档到硬盘的程序都需要执行，这些程序共享同一个数据“文档”，这就时线程高效的原因。 一个进程的多个线程会轮流占用CPU时间。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  程序代码存放在硬盘中，这和菜谱存放在柜子中道理相同，程序代码需要执行时，将代码读入到内存中，可以将一段代码读入多份到内存中，也就创建了多个进程，一个进程中为啥还要有“子进程”线程呢？比如文档编辑软件中，处理键盘回车换行的程序和页面渲染程序、保存文档到硬盘的程序都需要执行</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Vuex的理解</title>
    <link href="https://promptonce.github.io/2025/06/02/Vuex%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <id>https://promptonce.github.io/2025/06/02/Vuex%E7%9A%84%E7%90%86%E8%A7%A3/</id>
    <published>2025-06-02T13:52:19.000Z</published>
    <updated>2025-06-02T14:10:05.058Z</updated>
    
    <content type="html"><![CDATA[<p>  一个Vue应用中包含多个Vue组件，组件与组件之间可能通信关系复杂，这个时候需要Vuex作为中心进行管理，这和家里面的中心储物柜原理相同，1. 可以减小开发成本，避免多层嵌套组件链条中数据修改不好追踪的问题。 2. 通过维护唯一数据源，避免出现数据不一致的问题。3. 将数据处理逻辑集中在一个地方，避免数据处理方法分布在多个method中不好维护的问题。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  一个Vue应用中包含多个Vue组件，组件与组件之间可能通信关系复杂，这个时候需要Vuex作为中心进行管理，这和家里面的中心储物柜原理相同，1. 可以减小开发成本，避免多层嵌套组件链条中数据修改不好追踪的问题。 2. 通过维护唯一数据源，避免出现数据不一致的问题。3. 将</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>redis相对于传统磁盘数据库</title>
    <link href="https://promptonce.github.io/2025/05/27/redis%E7%9B%B8%E5%AF%B9%E4%BA%8E%E4%BC%A0%E7%BB%9F%E7%A3%81%E7%9B%98%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://promptonce.github.io/2025/05/27/redis%E7%9B%B8%E5%AF%B9%E4%BA%8E%E4%BC%A0%E7%BB%9F%E7%A3%81%E7%9B%98%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2025-05-27T03:04:14.000Z</published>
    <updated>2025-05-28T02:09:33.691Z</updated>
    
    <content type="html"><![CDATA[<p>  传统sql语句通过中磁盘中读取数据，时间单位为毫秒级，redis在内存中读取数据，时间单位为纳秒级，对于高频读写的数据，用内存数据库redis会极大提高系统处理速度。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  传统sql语句通过中磁盘中读取数据，时间单位为毫秒级，redis在内存中读取数据，时间单位为纳秒级，对于高频读写的数据，用内存数据库redis会极大提高系统处理速度。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>AutoDL原理</title>
    <link href="https://promptonce.github.io/2025/05/24/AutoDL%E5%8E%9F%E7%90%86/"/>
    <id>https://promptonce.github.io/2025/05/24/AutoDL%E5%8E%9F%E7%90%86/</id>
    <published>2025-05-24T02:44:06.000Z</published>
    <updated>2025-05-24T02:46:41.429Z</updated>
    
    <content type="html"><![CDATA[<img src="/2025/05/24/AutoDL%E5%8E%9F%E7%90%86/AutoDL%E5%8E%9F%E7%90%86.png" class="" title="AutoDL原理">]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/2025/05/24/AutoDL%E5%8E%9F%E7%90%86/AutoDL%E5%8E%9F%E7%90%86.png&quot; class=&quot;&quot; title=&quot;AutoDL原理&quot;&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>静态语言和动态语言</title>
    <link href="https://promptonce.github.io/2025/05/23/%E9%9D%99%E6%80%81%E8%AF%AD%E8%A8%80%E5%92%8C%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80/"/>
    <id>https://promptonce.github.io/2025/05/23/%E9%9D%99%E6%80%81%E8%AF%AD%E8%A8%80%E5%92%8C%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80/</id>
    <published>2025-05-23T14:41:06.000Z</published>
    <updated>2025-05-23T14:46:16.270Z</updated>
    
    <content type="html"><![CDATA[<p>  对于变量定义而言，变量定义后，类型可以改变的语言就是动态语言，类型不能改变的就是静态语言，比如Java是静态语言，JavaScript是动态语言。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  对于变量定义而言，变量定义后，类型可以改变的语言就是动态语言，类型不能改变的就是静态语言，比如Java是静态语言，JavaScript是动态语言。&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
